P = 110; % Pressure in kPa
T = 80; % Temperature in Â°C
z = [0.45, 0.35, 0.2]; % Overall composition

[L, V, xi, yi] = flash(P, T, z);

function [L, V, xi, yi] = flash(P, T, z)
    % Antoine equation parameters
    A = [14.5463, 14.2724, 14.2043];
    B = [2940.46, 2945.467, 2972.64];
    C = [237.22, 224, 209];

    % Calculate saturation pressures (ps) for each component
    for i = 1:3
        ps(i) = exp(A(i) - (B(i) / (C(i) + T)));
    end

    % Calculate saturation pressure of the mixture (pb)
    pb = sum(z .* ps);

    % Calculate inverse of ps (pd)
    pd = sum(z ./ ps);
    pd = 1 / pd;

    % Check if flash vaporization is possible
    if (pd < P) && (P < pb)
        % Calculate ki
        k = ps / P;

        % Initial guess for vapor fraction (vo)
        Vo = (P - pd) / (pb - pd);

        % Flash calculation using Newton-Raphson method
        for i = 1:10
            fv = sum((z .* k) ./ (1 + Vo .* (k - 1))) - 1;
            f1v = sum((-z .* k) .* (k - 1) ./ ((1 + Vo .* (k - 1)).^2));

            % Update vapor fraction
            Vn = Vo - (fv / f1v);

            % Check for convergence
            esp = abs((Vn - Vo) / Vo);
            if (esp <= 0.001)
                V = Vn;
                L = 1 - V;
                y = (z .* k) ./ (1 + Vn .* (k - 1));
                x = y .* k;

                % Normalize compositions
                xi = x / sum(x);
                yi = y / sum(y);

                % Display results
                disp('Flash Vaporization Results:');
                disp(['Liquid Fraction (L): ', num2str(L)]);
                disp(['Vapor Fraction (V): ', num2str(V)]);
                disp(['Liquid Phase Composition (xi): ', num2str(xi)]);
                disp(['Vapor Phase Composition (yi): ', num2str(yi)]);

                return;
            else
                Vo = Vn;
            end
        end
    else
        disp('Flash vaporization not possible for the given conditions.');
    end
end
